version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: langflow_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-langflow}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-langflow123}
      POSTGRES_DB: ${POSTGRES_DB:-langflow}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - langflow_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-langflow} -d ${POSTGRES_DB:-langflow}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100

  redis:
    image: redis:7-alpine
    container_name: langflow_redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - langflow_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: >
      redis-server
      --appendonly yes
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru

  langflow:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: langflow_app
    ports:
      - "${LANGFLOW_PORT:-7860}:7860"
    environment:
      # Database Configuration
      - LANGFLOW_DATABASE_URL=postgresql://${POSTGRES_USER:-langflow}:${POSTGRES_PASSWORD:-langflow123}@postgres:5432/${POSTGRES_DB:-langflow}
      
      # Redis Configuration
      - LANGFLOW_REDIS_URL=redis://redis:6379/0
      
      # Langflow Core Configuration
      - LANGFLOW_CONFIG_DIR=/home/langflow/.langflow
      - LANGFLOW_AUTO_LOGIN=${LANGFLOW_AUTO_LOGIN:-false}
      - LANGFLOW_SUPERUSER=${LANGFLOW_SUPERUSER:-admin}
      - LANGFLOW_SUPERUSER_PASSWORD=${LANGFLOW_SUPERUSER_PASSWORD:-admin123}
      - LANGFLOW_SECRET_KEY=${LANGFLOW_SECRET_KEY:-super-secret-key-change-in-production}
      - LANGFLOW_NEW_USER_IS_ACTIVE=${LANGFLOW_NEW_USER_IS_ACTIVE:-true}
      
      # Security Configuration
      - LANGFLOW_SECURITY_SECRET_KEY=${LANGFLOW_SECURITY_SECRET_KEY:-your-security-secret-key}
      - LANGFLOW_ACCESS_TOKEN_EXPIRE_MINUTES=${LANGFLOW_ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      
      # Logging Configuration
      - LANGFLOW_LOG_LEVEL=${LANGFLOW_LOG_LEVEL:-INFO}
      - LANGFLOW_LOG_FILE=${LANGFLOW_LOG_FILE:-/home/langflow/.langflow/logs/langflow.log}
      
      # Development Configuration
      - LANGFLOW_DEV=${LANGFLOW_DEV:-false}
      - LANGFLOW_DEBUG=${LANGFLOW_DEBUG:-false}
      
      # API Configuration
      - LANGFLOW_HOST=${LANGFLOW_HOST:-0.0.0.0}
      - LANGFLOW_PORT=${LANGFLOW_PORT:-7860}
      - LANGFLOW_WORKERS=${LANGFLOW_WORKERS:-1}
      
      # Storage Configuration
      - LANGFLOW_STORE_URL=${LANGFLOW_STORE_URL:-}
      - LANGFLOW_DOWNLOAD_DEPS=${LANGFLOW_DOWNLOAD_DEPS:-false}
      
      # Cache Configuration
      - LANGFLOW_CACHE_TYPE=${LANGFLOW_CACHE_TYPE:-memory}
      - LANGFLOW_CACHE=${LANGFLOW_CACHE:-InMemoryCache}
      
      # API Keys (Optional - ใส่ตอนใช้งานจริง)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      - HUGGINGFACE_API_TOKEN=${HUGGINGFACE_API_TOKEN:-}
      
      # Additional Environment Variables
      - PYTHONPATH=/app/.venv/lib/python3.12/site-packages
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    
    volumes:
      - langflow_data:/home/langflow/.langflow
      - langflow_logs:/home/langflow/.langflow/logs
      - langflow_storage:/home/langflow/.langflow/storage
      - ./flows:/home/langflow/flows:ro
    
    networks:
      - langflow_network
    
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: langflow_nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - langflow_network
    depends_on:
      - langflow
    restart: unless-stopped
    profiles:
      - nginx

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  langflow_data:
    driver: local
  langflow_logs:
    driver: local
  langflow_storage:
    driver: local

networks:
  langflow_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
