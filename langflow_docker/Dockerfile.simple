# Alternative Dockerfile using official Langflow image as base
# This avoids compilation issues by using pre-built image

FROM langflowai/langflow:latest AS base

# Switch to root to install additional packages
USER root

# Install uv for faster package management (optional for custom packages)
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /usr/local/bin/

# Install any additional system dependencies if needed
RUN apt-get update && apt-get install -y \
    --no-install-recommends \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create langflow user if it doesn't exist
RUN if ! id -u langflow >/dev/null 2>&1; then \
    groupadd --gid 1000 langflow && \
    useradd --uid 1000 --gid langflow --shell /bin/bash --create-home langflow; \
    fi

# Create necessary directories for Langflow
RUN mkdir -p /home/langflow/.langflow/logs \
    && mkdir -p /home/langflow/.langflow/storage \
    && mkdir -p /home/langflow/.langflow/cache \
    && mkdir -p /home/langflow/.langflow/secret_keys \
    && chown -R langflow:langflow /home/langflow/.langflow

# Copy custom configuration or flows if any
# COPY --chown=langflow:langflow flows/ /home/langflow/flows/

# Switch back to langflow user
USER langflow

# Set working directory
WORKDIR /home/langflow

# Expose Langflow port
EXPOSE 7860

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:7860/health || exit 1

# Default command to run Langflow
CMD ["langflow", "run", "--host", "0.0.0.0", "--port", "7860"]
