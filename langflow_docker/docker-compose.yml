services:
  postgres:
    image: postgres:16-alpine
    container_name: langflow_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-langflow}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-langflow123}
      POSTGRES_DB: ${POSTGRES_DB:-langflow}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-langflow} -d ${POSTGRES_DB:-langflow}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  langflow:
    image: langflowai/langflow:latest
    container_name: langflow_app
    ports:
      - "${LANGFLOW_PORT:-7860}:7860"
    environment:
      # Database Configuration
      - LANGFLOW_DATABASE_URL=postgresql://${POSTGRES_USER:-langflow}:${POSTGRES_PASSWORD:-langflow123}@postgres:5432/${POSTGRES_DB:-langflow}
      
      # URL Configuration - Fix SSE issues
      - LANGFLOW_HOST=0.0.0.0
      - LANGFLOW_PORT=7860
      - LANGFLOW_BACKEND_URL=http://localhost:${LANGFLOW_PORT:-7860}
      - LANGFLOW_FRONTEND_URL=http://localhost:${LANGFLOW_PORT:-7860}
      
      # Auth Configuration
      - LANGFLOW_AUTO_LOGIN=${LANGFLOW_AUTO_LOGIN:-false}
      - LANGFLOW_SUPERUSER=${LANGFLOW_SUPERUSER:-admin}
      - LANGFLOW_SUPERUSER_PASSWORD=${LANGFLOW_SUPERUSER_PASSWORD:-admin123}
      - LANGFLOW_SECRET_KEY=${LANGFLOW_SECRET_KEY:-super-secret-key-change-in-production}
      - LANGFLOW_NEW_USER_IS_ACTIVE=${LANGFLOW_NEW_USER_IS_ACTIVE:-true}
      
      # Other Configuration
      - LANGFLOW_LOG_LEVEL=${LANGFLOW_LOG_LEVEL:-INFO}
      - LANGFLOW_CACHE_TYPE=${LANGFLOW_CACHE_TYPE:-memory}
      - PYTHONUNBUFFERED=1
      
      # API Keys (Optional)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
    
    volumes:
      - langflow_data:/app/langflow
      - ./flows:/app/flows:ro
    
    depends_on:
      postgres:
        condition: service_healthy
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

volumes:
  postgres_data:
    driver: local
  langflow_data:
    driver: local
